/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_microtechmd_blecomm_controller_CgmController */

#ifndef _Included_com_microtechmd_blecomm_controller_CgmController
#define _Included_com_microtechmd_blecomm_controller_CgmController
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_microtechmd_blecomm_controller_CgmController
 * Method:    constructor
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_microtechmd_blecomm_controller_CgmController_constructor
        (JNIEnv *, jobject);

/*
 * Class:     com_microtechmd_blecomm_controller_CgmController
 * Method:    destructor
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_microtechmd_blecomm_controller_CgmController_destructor
        (JNIEnv *, jobject);

/*
 * Class:     com_microtechmd_blecomm_controller_CgmController
 * Method:    getHistories
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_microtechmd_blecomm_controller_CgmController_getHistories
        (JNIEnv *, jobject, jint);

/*
 * Class:     com_microtechmd_blecomm_controller_CgmController
 * Method:    getFullHistories
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_com_microtechmd_blecomm_controller_CgmController_getFullHistories
        (JNIEnv *, jobject, jint);

/*
 * Class:     com_microtechmd_blecomm_controller_CgmController
 * Method:    newSensor
 * Signature: (Z)I
 */
JNIEXPORT jint JNICALL Java_com_microtechmd_blecomm_controller_CgmController_newSensor
        (JNIEnv *, jobject, jboolean, jlong);

/*
 * Class:     com_microtechmd_blecomm_controller_CgmController
 * Method:    setDatetime
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_microtechmd_blecomm_controller_CgmController_setDatetime
        (JNIEnv *, jobject, jlong);

/*
 * Class:     com_microtechmd_blecomm_controller_CgmController
 * Method:    recordBg
 * Signature: (FJ)I
 */
JNIEXPORT jint JNICALL Java_com_microtechmd_blecomm_controller_CgmController_recordBg
        (JNIEnv *, jobject, jfloat, jlong);

/*
 * Class:     com_microtechmd_blecomm_controller_CgmController
 * Method:    calibration
 * Signature: (FJ)I
 */
JNIEXPORT jint JNICALL Java_com_microtechmd_blecomm_controller_CgmController_calibration
        (JNIEnv *, jobject, jfloat, jlong);

/*
 * Class:     com_microtechmd_blecomm_controller_CgmController
 * Method:    setHyper
 * Signature: (F)I
 */
JNIEXPORT jint JNICALL Java_com_microtechmd_blecomm_controller_CgmController_setHyper
        (JNIEnv *, jobject, jfloat);

/*
 * Class:     com_microtechmd_blecomm_controller_CgmController
 * Method:    setHypo
 * Signature: (F)I
 */
JNIEXPORT jint JNICALL Java_com_microtechmd_blecomm_controller_CgmController_setHypo
        (JNIEnv *, jobject, jfloat);


JNIEXPORT jfloat JNICALL Java_com_microtechmd_blecomm_controller_CgmController_getHypo
        (JNIEnv *, jobject);

JNIEXPORT jfloat JNICALL Java_com_microtechmd_blecomm_controller_CgmController_getHyper
        (JNIEnv *, jobject);

JNIEXPORT jint JNICALL Java_com_microtechmd_blecomm_controller_CgmController_getDeviceInfo
        (JNIEnv *, jobject);

JNIEXPORT jint JNICALL Java_com_microtechmd_blecomm_controller_CgmController_getDefaultParamData
        (JNIEnv *, jobject);

JNIEXPORT jint JNICALL Java_com_microtechmd_blecomm_controller_CgmController_setDefaultParamData
        (JNIEnv *, jobject, jfloatArray value);


JNIEXPORT void JNICALL Java_com_microtechmd_blecomm_controller_CgmController_initialSettings
        (JNIEnv *, jobject, jfloat, jfloat);


#ifdef __cplusplus
}
#endif
#endif
