/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_microtechmd_blecomm_controller_BleController */

#ifndef _Included_com_microtechmd_blecomm_controller_BleController
#define _Included_com_microtechmd_blecomm_controller_BleController
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_microtechmd_blecomm_controller_BleController
 * Method:    setBleAdapter
 * Signature: (Lcom/microtechmd/blecomm/BleAdapter;)V
 */
JNIEXPORT void JNICALL Java_com_microtechmd_blecomm_controller_BleController_setBleAdapter
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_microtechmd_blecomm_controller_BleController
 * Method:    startScan
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_microtechmd_blecomm_controller_BleController_startScan
  (JNIEnv *, jclass);

/*
 * Class:     com_microtechmd_blecomm_controller_BleController
 * Method:    stopScan
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_microtechmd_blecomm_controller_BleController_stopScan
  (JNIEnv *, jclass);

/*
 * Class:     com_microtechmd_blecomm_controller_BleController
 * Method:    setDiscoveredCallback
 * Signature: (Lcom/microtechmd/blecomm/controller/BleController/DiscoveredCallback;)V
 */
JNIEXPORT void JNICALL Java_com_microtechmd_blecomm_controller_BleController_setDiscoveredCallback
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_microtechmd_blecomm_controller_BleController
 * Method:    getMac
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_microtechmd_blecomm_controller_BleController_getMac
  (JNIEnv *, jobject);

/*
 * Class:     com_microtechmd_blecomm_controller_BleController
 * Method:    getName
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_microtechmd_blecomm_controller_BleController_getName
  (JNIEnv *, jobject);

/*
 * Class:     com_microtechmd_blecomm_controller_BleController
 * Method:    getSn
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_microtechmd_blecomm_controller_BleController_getSn
  (JNIEnv *, jobject);

/*
 * Class:     com_microtechmd_blecomm_controller_BleController
 * Method:    getHostAddress
 * Signature: ()[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_microtechmd_blecomm_controller_BleController_getHostAddress
  (JNIEnv *, jobject);

/*
 * Class:     com_microtechmd_blecomm_controller_BleController
 * Method:    getId
 * Signature: ()[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_microtechmd_blecomm_controller_BleController_getId
  (JNIEnv *, jobject);

/*
 * Class:     com_microtechmd_blecomm_controller_BleController
 * Method:    getKey
 * Signature: ()[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_microtechmd_blecomm_controller_BleController_getKey
  (JNIEnv *, jobject);

/*
 * Class:     com_microtechmd_blecomm_controller_BleController
 * Method:    getRssi
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_microtechmd_blecomm_controller_BleController_getRssi
  (JNIEnv *, jobject);

/*
 * Class:     com_microtechmd_blecomm_controller_BleController
 * Method:    setMac
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_microtechmd_blecomm_controller_BleController_setMac
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_microtechmd_blecomm_controller_BleController
 * Method:    setName
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_microtechmd_blecomm_controller_BleController_setName
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_microtechmd_blecomm_controller_BleController
 * Method:    setSn
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_microtechmd_blecomm_controller_BleController_setSn
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_microtechmd_blecomm_controller_BleController
 * Method:    setHostAddress
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_com_microtechmd_blecomm_controller_BleController_setHostAddress
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     com_microtechmd_blecomm_controller_BleController
 * Method:    setId
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_com_microtechmd_blecomm_controller_BleController_setId
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     com_microtechmd_blecomm_controller_BleController
 * Method:    setKey
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_com_microtechmd_blecomm_controller_BleController_setKey
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     com_microtechmd_blecomm_controller_BleController
 * Method:    setRssi
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_microtechmd_blecomm_controller_BleController_setRssi
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_microtechmd_blecomm_controller_BleController
 * Method:    setMessageCallback
 * Signature: (Lcom/microtechmd/blecomm/controller/BleController/MessageCallback;)V
 */
JNIEXPORT void JNICALL Java_com_microtechmd_blecomm_controller_BleController_setMessageCallback
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_microtechmd_blecomm_controller_BleController
 * Method:    register
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_microtechmd_blecomm_controller_BleController_register
  (JNIEnv *, jobject);

/*
 * Class:     com_microtechmd_blecomm_controller_BleController
 * Method:    unregister
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_microtechmd_blecomm_controller_BleController_unregister
  (JNIEnv *, jobject);

/*
 * Class:     com_microtechmd_blecomm_controller_BleController
 * Method:    disconnect
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_microtechmd_blecomm_controller_BleController_disconnect
  (JNIEnv *, jobject);

/*
 * Class:     com_microtechmd_blecomm_controller_BleController
 * Method:    pair
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_microtechmd_blecomm_controller_BleController_pair
  (JNIEnv *, jobject);

/*
 * Class:     com_microtechmd_blecomm_controller_BleController
 * Method:    unpair
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_microtechmd_blecomm_controller_BleController_unpair
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
